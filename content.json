{"meta":{"title":"Memorial Library","subtitle":null,"description":null,"author":"이상현","url":"https://leesh6796.github.io"},"pages":[],"posts":[{"title":"English Ruler Problem","slug":"English-Ruler-Problem","date":"2018-02-07T17:04:30.000Z","updated":"2018-02-07T18:43:47.000Z","comments":true,"path":"2018/02/08/English-Ruler-Problem/","link":"","permalink":"https://leesh6796.github.io/2018/02/08/English-Ruler-Problem/","excerpt":"","text":"DS 수업 시간에 배운 English Ruler Problem을 Recursive한 방법으로 풀어보자. 수업시간엔 Java로 풀었지만, 복습 과정에선 알고리즘 구현을 우선순위에 두고 있으므로 Python을 사용해 문제를 해결했다. 이 문제의 핵심은 길이 L인 눈금을 기준으로, 위 아래에 길이가 L-1인 Interval이 와야 한다는 것이다. 이 때 길이가 L-1인 Interval은 길이가 L인 두 눈금 사이에 그려져야 하는, 문제에서 요구하는 길이가 L-1인 눈금의 집합을 의미한다. 예를 들어 길이가 2인 Interval은 아래와 같다. 123---- 이제 recursive하게 문제를 해결하기 위해 base case를 잡자. 1- 위와 같은 형태의 base를 잡을 수 있고, 이를 recursive하게 2번 반복한다고 생각하면 123---- 위와 같은 눈금을 그릴 수 있다. 이제 recursive step을 구상해보면, L이 1 이상일 때 123Interval Drawing(length L-1)LineDrawing(length L)Interval Drawing(length L-1) 위와 같은 형태의 recursive step을 밟아나가면 된다. 전체 코드는 다음과 같다. 123456789101112131415161718192021222324252627282930313233def drawRuler(num_max_bar : int, max_inch : int): # n개의 max line을 가진다 하자 # num_max_bar는 자에서 최대 눈금의 길이를, max_inch는 자에서 표시하는 최대 인치를 말한다. drawLabel(num_max_bar, 0) # 가장 처음 0을 그린다. for i in range(1, max_inch + 1): drawInterval(num_max_bar - 1) # n-1 크기의 구간을 그린 다음 drawLabel(num_max_bar, i) # n개의 눈금을 그리고, 라벨을 붙인다.def drawInterval(line_length : int): if line_length &gt; 0: drawInterval(line_length - 1) drawLine(line_length) drawInterval(line_length - 1)def drawLabel(length : int, label : int): # 라벨이 있는 눈금을 그린다. for i in range(length): print(\"-\", end='') if label &gt;= 0: # Python 3.6 이상에서만 동작하는 formatting이다. print(f\" &#123;label&#125;\", end='') print()def drawLine(length : int): # without label # 라벨이 없는 눈금을 그린다. drawLabel(length, -1)drawRuler(3, 2) 실행 결과는 다음과 같다.123456789--- 0------- 1------- 2","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"https://leesh6796.github.io/categories/Algorithm/"},{"name":"DS","slug":"Algorithm/DS","permalink":"https://leesh6796.github.io/categories/Algorithm/DS/"}],"tags":[]}]}