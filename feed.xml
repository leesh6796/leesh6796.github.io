<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Memorial Library</title>
  
  
  <link href="/feed.xml" rel="self"/>
  
  <link href="https://leesh6796.github.io/"/>
  <updated>2018-02-07T18:43:47.000Z</updated>
  <id>https://leesh6796.github.io/</id>
  
  <author>
    <name>이상현</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>English Ruler Problem</title>
    <link href="https://leesh6796.github.io/2018/02/08/English-Ruler-Problem/"/>
    <id>https://leesh6796.github.io/2018/02/08/English-Ruler-Problem/</id>
    <published>2018-02-07T17:04:30.000Z</published>
    <updated>2018-02-07T18:43:47.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2018/02/08/English-Ruler-Problem/p1.png" alt="English Ruler Problem" title="English Ruler Problem"><p>DS 수업 시간에 배운 English Ruler Problem을 Recursive한 방법으로 풀어보자.</p><p>수업시간엔 Java로 풀었지만, 복습 과정에선 알고리즘 구현을 우선순위에 두고 있으므로 Python을 사용해 문제를 해결했다.</p><p>이 문제의 핵심은 길이 <code>L</code>인 눈금을 기준으로, 위 아래에 길이가 <code>L-1</code>인 Interval이 와야 한다는 것이다. 이 때 길이가 <code>L-1</code>인 Interval은 길이가 <code>L</code>인 두 눈금 사이에 그려져야 하는, 문제에서 요구하는 길이가 <code>L-1</code>인 눈금의 집합을 의미한다. 예를 들어 길이가 2인 Interval은 아래와 같다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-</div><div class="line">--</div><div class="line">-</div></pre></td></tr></table></figure><p>이제 recursive하게 문제를 해결하기 위해 base case를 잡자.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-</div></pre></td></tr></table></figure><p>위와 같은 형태의 base를 잡을 수 있고, 이를 recursive하게 2번 반복한다고 생각하면</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-</div><div class="line">--</div><div class="line">-</div></pre></td></tr></table></figure><p>위와 같은 눈금을 그릴 수 있다. 이제 recursive step을 구상해보면, L이 1 이상일 때</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Interval Drawing(length L-1)</div><div class="line">LineDrawing(length L)</div><div class="line">Interval Drawing(length L-1)</div></pre></td></tr></table></figure><p>위와 같은 형태의 recursive step을 밟아나가면 된다.</p><p>전체 코드는 다음과 같다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawRuler</span><span class="params">(num_max_bar : int, max_inch : int)</span>:</span> <span class="comment"># n개의 max line을 가진다 하자</span></div><div class="line">    <span class="comment"># num_max_bar는 자에서 최대 눈금의 길이를, max_inch는 자에서 표시하는 최대 인치를 말한다.</span></div><div class="line">    drawLabel(num_max_bar, <span class="number">0</span>) <span class="comment"># 가장 처음 0을 그린다.</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, max_inch + <span class="number">1</span>):</div><div class="line">        drawInterval(num_max_bar - <span class="number">1</span>) <span class="comment"># n-1 크기의 구간을 그린 다음</span></div><div class="line">        drawLabel(num_max_bar, i) <span class="comment"># n개의 눈금을 그리고, 라벨을 붙인다.</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawInterval</span><span class="params">(line_length : int)</span>:</span></div><div class="line">    <span class="keyword">if</span> line_length &gt; <span class="number">0</span>:</div><div class="line">        drawInterval(line_length - <span class="number">1</span>)</div><div class="line">        drawLine(line_length)</div><div class="line">        drawInterval(line_length - <span class="number">1</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawLabel</span><span class="params">(length : int, label : int)</span>:</span></div><div class="line">    <span class="comment"># 라벨이 있는 눈금을 그린다.</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</div><div class="line">        print(<span class="string">"-"</span>, end=<span class="string">''</span>)</div><div class="line"></div><div class="line">    <span class="keyword">if</span> label &gt;= <span class="number">0</span>:</div><div class="line">        <span class="comment"># Python 3.6 이상에서만 동작하는 formatting이다.</span></div><div class="line">        print(<span class="string">f" <span class="subst">&#123;label&#125;</span>"</span>, end=<span class="string">''</span>)</div><div class="line"></div><div class="line">    print()</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawLine</span><span class="params">(length : int)</span>:</span> <span class="comment"># without label</span></div><div class="line">    <span class="comment"># 라벨이 없는 눈금을 그린다.</span></div><div class="line">    drawLabel(length, <span class="number">-1</span>)</div><div class="line"></div><div class="line"></div><div class="line">drawRuler(<span class="number">3</span>, <span class="number">2</span>)</div></pre></td></tr></table></figure><p>실행 결과는 다음과 같다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">--- 0</div><div class="line">-</div><div class="line">--</div><div class="line">-</div><div class="line">--- 1</div><div class="line">-</div><div class="line">--</div><div class="line">-</div><div class="line">--- 2</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2018/02/08/English-Ruler-Problem/p1.png&quot; alt=&quot;English Ruler Problem&quot; title=&quot;English Ruler Problem&quot;&gt;
&lt;p&gt;DS 수업 시간에 배운 English Ruler
      
    
    </summary>
    
      <category term="Algorithm" scheme="https://leesh6796.github.io/categories/Algorithm/"/>
    
      <category term="DS" scheme="https://leesh6796.github.io/categories/Algorithm/DS/"/>
    
    
  </entry>
  
</feed>
